#!/bin/bash

# setup.sh
# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}Creating ft_transcendence project structure...${NC}"

# Create root directory
mkdir -p ft_transcendence
cd ft_transcendence

# Create main project subdirectories
echo -e "${GREEN}Creating main project directories...${NC}"
mkdir -p frontend/src/{styles,js/{game,tournament,websocket,components}} \
         backend/src/{models,controllers,services,db/migrations} \
         database

# Frontend structure
echo -e "${GREEN}Setting up frontend structure...${NC}"
# Create frontend files
touch frontend/Dockerfile \
      frontend/package.json \
      frontend/index.html \
      frontend/src/styles/main.css \
      frontend/src/js/main.js \
      frontend/src/js/game/{Ball.js,Paddle.js,Game.js,GameState.js} \
      frontend/src/js/tournament/{Tournament.js,Matchmaking.js} \
      frontend/src/js/websocket/WebSocketClient.js \
      frontend/src/js/components/{LoginForm.js,TournamentRegistration.js,GameCanvas.js}

# Backend structure
echo -e "${GREEN}Setting up backend structure...${NC}"
# Create backend files
touch backend/Dockerfile \
      backend/Gemfile \
      backend/config.ru \
      backend/src/server.rb \
      backend/src/models/{user.rb,tournament.rb,game.rb} \
      backend/src/controllers/{auth_controller.rb,tournament_controller.rb,game_controller.rb} \
      backend/src/services/{websocket_server.rb,game_service.rb}

# Database structure
echo -e "${GREEN}Setting up database structure...${NC}"
# Create database files
touch database/Dockerfile \
      database/init.sql

# Create root configuration files
echo -e "${GREEN}Creating configuration files...${NC}"
touch docker-compose.yml \
      .env \
      .gitignore \
      README.md

# Create basic .gitignore content
echo -e "${GREEN}Adding basic .gitignore content...${NC}"
cat > .gitignore << EOL
# Dependencies
node_modules/
/vendor/

# Environment variables
.env
.env.*

# Logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# Compiled binary addons
build/
dist/

# Temporary files
tmp/
.tmp/

# System files
.DS_Store
Thumbs.db
EOL

# Create basic .env content
echo -e "${GREEN}Adding basic .env content...${NC}"
cat > .env << EOL
# Database Configuration
DB_NAME=ft_transcendence
DB_USER=postgres
DB_PASSWORD=your_secure_password
DB_HOST=db
DB_PORT=5432

# Backend Configuration
BACKEND_PORT=8080
NODE_ENV=development

# Frontend Configuration
FRONTEND_PORT=3000

# Security
JWT_SECRET=your_jwt_secret_key
EOL

# Create basic docker-compose.yml content
echo -e "${GREEN}Adding basic docker-compose.yml content...${NC}"
cat > docker-compose.yml << EOL
version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "\${FRONTEND_PORT}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=\${NODE_ENV}
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - "\${BACKEND_PORT}:8080"
    volumes:
      - ./backend:/app
    environment:
      - POSTGRES_HOST=\${DB_HOST}
      - POSTGRES_DB=\${DB_NAME}
      - POSTGRES_USER=\${DB_USER}
      - POSTGRES_PASSWORD=\${DB_PASSWORD}
    depends_on:
      - db

  db:
    build: ./database
    ports:
      - "\${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=\${DB_NAME}
      - POSTGRES_USER=\${DB_USER}
      - POSTGRES_PASSWORD=\${DB_PASSWORD}

volumes:
  postgres_data:
EOL

# Create basic README.md content
echo -e "${GREEN}Adding basic README.md content...${NC}"
cat > README.md << EOL
# ft_transcendence

## Description
A real-time multiplayer Pong game with tournament functionality.

## Prerequisites
- Docker
- Docker Compose

## Setup
1. Clone the repository
2. Copy \`.env.example\` to \`.env\` and update the variables
3. Run \`docker-compose up --build\`

## Usage
- Frontend: http://localhost:3000
- Backend: http://localhost:8080
- Database: http://localhost:5432

## Features
- Real-time multiplayer Pong game
- Tournament system
- User authentication
- Secure websocket communication

## Development
\`\`\`bash
# Start development environment
docker-compose up --build

# Stop environment
docker-compose down

# View logs
docker-compose logs -f
\`\`\`

## Security
- HTTPS enabled
- Password hashing
- SQL injection protection
- XSS protection
EOL

# Set execute permissions for development scripts
echo -e "${GREEN}Setting file permissions...${NC}"
chmod -R 755 .

echo -e "${BLUE}Project structure created successfully!${NC}"
echo -e "${GREEN}You can now cd into ft_transcendence and start development${NC}"

# Tree structure output (if tree is installed)
if command -v tree &> /dev/null; then
    echo -e "${BLUE}Project structure overview:${NC}"
    tree -a -I 'node_modules|.git'
fi
